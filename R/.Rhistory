cutoff = as.numeric(as.Date("2018-04-02"))
out1 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "uniform", p =1, h = 20, c= cutoff)
summary(out1)
#statistically insignificant results
#arbitrary bandwidth
out2 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
out2 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
#import data
trump_vote = read.csv("C:/Users/Haokun Zhang/Desktop/github/trade_war_effects/data/approval_topline.csv")
#filter the data to only voters
voter_data = trump_vote %>%
filter(subgroup == "Voters")
voter_data = voter_data %>%
select(subgroup,
modeldate,
approve_estimate,
approve_hi,
approve_lo,
disapprove_estimate,
disapprove_hi,
disapprove_lo)
# create a dataframe of voter_data
df_voter_data <- data.frame(modeldate = c(voter_data$modeldate),
approve_estimate = c(voter_data$approve_estimate))
# describing modeldate in date class
df_voter_data$modeldate <- as.Date(voter_data$modeldate, format = "%m/%d/%Y")
# plot of distribution across time
p <- ggplot(data = df_voter_data, aes(x=modeldate, y=approve_estimate)) + geom_line() + scale_x_date(date_labels = "%Y/%m/%d") + geom_vline(xintercept = as.Date("2018-04-02"), color = "red")
# show p
plot(p)
cutoff = as.numeric(as.Date("2018-04-02"))
out1 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "uniform", p =1, h = 20, c= cutoff)
summary(out1)
#statistically insignificant results
#arbitrary bandwidth
out2 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
out3 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =2, h = 20, c= cutoff)
summary(out3)
#arbitrary bandwidth
bwd1 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(bwd1)
bwd2 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "msetwo" , c= cutoff)
summary(bwd2)
out4 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(out4)
out5 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", scaleregul = 0, p =1, bwselect = "mserd", c= cutoff, all = TRUE)
summary(out5)
out6 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", all=TRUE, c= cutoff)
summary(out6)
out7 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "cerrd", c= cutoff)
summary(out7)
#statistically insignificant results
bdw3 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, all = TRUE, c= cutoff)
summary(bdw3)
# shows all bandwidth calculations
Z = cbind(trump_vote$approve_hi, trump_vote$approve_lo, trump_vote$disapprove_estimate,
trump_vote$disapprove_hi, trump_vote$disapprove_lo)
out8 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, c= cutoff, covs = Z, kernel = "triangular", scaleregul = 1,p = 1, bwselect = "mserd")
## simple scatter plot with cutoff and bandwidths
ggplot(data = df_voter_data, aes(x=modeldate, y=approve_estimate)) + geom_point() + scale_x_date(date_labels = "%Y/%m/%d") + scale_x_date(limits = as.Date(c("2018-3-02", "2018-04-30"))) + geom_vline(xintercept = as.Date("2018-04-02"), color = "red")
## Implement rdplot
y = (df_voter_data$approve_estimate)
x = as.numeric(df_voter_data$modeldate)
c = as.numeric(as.Date("2018-04-02"))
bandwidth = rdrobust(y, x, c=cutoff, kernel = "triangular", p = 1, bwselect = "mserd")$bws[1,1]
out = rdplot(y[abs(x) <= bandwidth], x[abs(x) <= bandwidth], p = 1, kernel = "triangular", cex.axis = 1.5, cex.lab = 1.5)
rdd = rddensity(X = df_voter_data$modeldate, c= cutoff, bwselect = "each", p=1, all = TRUE, kernel = "triangular")
rdplot <- rdplotdensity(rdd, X = df_voter_data$modeldate)
Z = cbind(trump_vote$approve_hi, trump_vote$approve_lo, trump_vote$disapprove_estimate,
trump_vote$disapprove_hi, trump_vote$disapprove_lo)
colnames(z)=c("approve_hi", "approve_lo", "disapprove_estimate", "disapprove_hi", "disapprove_lo")
Z = cbind(trump_vote$approve_hi, trump_vote$approve_lo, trump_vote$disapprove_estimate,
trump_vote$disapprove_hi, trump_vote$disapprove_lo)
colnames(Z)=c("approve_hi", "approve_lo", "disapprove_estimate", "disapprove_hi", "disapprove_lo")
out8 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, c= cutoff, covs = Z, kernel = "triangular", scaleregul = 1,p = 1, bwselect = "mserd")
source("~/.active-rstudio-document", echo=TRUE)
## simple scatter plot with cutoff and bandwidths
ggplot(data = df_voter_data, aes(x=modeldate, y=approve_estimate)) + geom_point() + scale_x_date(date_labels = "%Y/%m/%d") + scale_x_date(limits = as.Date(c("2018-3-02", "2018-04-30"))) + geom_vline(xintercept = as.Date("2018-04-02"), color = "red")
## Implement rdplot
y = (df_voter_data$approve_estimate)
x = as.numeric(df_voter_data$modeldate)
c = as.numeric(as.Date("2018-04-02"))
bandwidth = rdrobust(y, x, c=cutoff, kernel = "triangular", p = 1, bwselect = "mserd")$bws[1,1]
out = rdplot(y[abs(x) <= bandwidth], x[abs(x) <= bandwidth], p = 1, kernel = "triangular", cex.axis = 1.5, cex.lab = 1.5)
Z = cbind(
trump_vote$approve_hi,
trump_vote$approve_lo,
trump_vote$disapprove_estimate,
trump_vote$disapprove_hi,
trump_vote$disapprove_lo
)
colnames(Z) = c(
"approve_hi",
"approve_lo",
"disapprove_estimate",
"disapprove_hi",
"disapprove_lo"
)
out8 = rdrobust(
df_voter_data$approve_estimate,
df_voter_data$modeldate,
c = cutoff,
covs = Z,
kernel = "triangular",
scaleregul = 1,
p = 1,
bwselect = "mserd"
)
Z = cbind(
trump_vote$approve_hi,
trump_vote$approve_lo,
trump_vote$disapprove_estimate,
trump_vote$disapprove_hi,
trump_vote$disapprove_lo
)
colnames(Z) = c(
"approve_hi",
"approve_lo",
"disapprove_estimate",
"disapprove_hi",
"disapprove_lo"
)
out8 = rdrobust(
df_voter_data$approve_estimate,
df_voter_data$modeldate,
p=1,
covs = Z,
c = cutoff,
kernel = "triangular",
scaleregul = 1,
bwselect = "mserd"
)
rdd = rddensity(X = df_voter_data$modeldate, c= cutoff, bwselect = "each", p=1, all = TRUE, kernel = "triangular")
rdplot <- rdplotdensity(rdd, X = df_voter_data$modeldate)
#import modules
library(dplyr)
library(ggplot2)
library(rdrobust)
library(magrittr)
library(haven)
library(tidyverse)
library(data.table)
library(fixest)
library(glue)
library(data.table)
library(caret)
library(glmnet)
library(gbm)
library(ggmap)
library(rpart)
library(rpart.plot)
library(randomForest)
library(rsample)
library(modelr)
library(fastDummies)
library(scales)
library(here)
library(knitr)
library(kableExtra)
library(stargazer)
library(here)
library(foreach)
library(rddensity)
library(dplyr)
path <- here()
#import data
trump_vote = read.csv("C:/Users/Haokun Zhang/Desktop/github/trade_war_effects/data/approval_topline.csv")
#filter the data to only voters
voter_data = trump_vote %>%
filter(subgroup == "Voters")
voter_data = voter_data %>%
select(subgroup,
modeldate,
approve_estimate,
approve_hi,
approve_lo,
disapprove_estimate,
disapprove_hi,
disapprove_lo)
# create a dataframe of voter_data
df_voter_data <- data.frame(modeldate = c(voter_data$modeldate),
approve_estimate = c(voter_data$approve_estimate))
# describing modeldate in date class
df_voter_data$modeldate <- as.Date(voter_data$modeldate, format = "%m/%d/%Y")
# plot of distribution across time
p <- ggplot(data = df_voter_data, aes(x=modeldate, y=approve_estimate)) + geom_line() + scale_x_date(date_labels = "%Y/%m/%d") + geom_vline(xintercept = as.Date("2018-04-02"), color = "red")
# show p
plot(p)
cutoff = as.numeric(as.Date("2018-04-02"))
out1 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "uniform", p =1, h = 20, c= cutoff)
summary(out1)
#statistically insignificant results
#arbitrary bandwidth
out2 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
out3 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =2, h = 20, c= cutoff)
summary(out3)
#arbitrary bandwidth
bwd1 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(bwd1)
bwd2 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "msetwo" , c= cutoff)
summary(bwd2)
out4 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(out4)
out5 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", scaleregul = 0, p =1, bwselect = "mserd", c= cutoff, all = TRUE)
summary(out5)
out6 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", all=TRUE, c= cutoff)
summary(out6)
out7 = rdrobust(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "cerrd", c= cutoff)
summary(out7)
#statistically insignificant results
bdw3 = rdbwselect(df_voter_data$approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, all = TRUE, c= cutoff)
summary(bdw3)
# shows all bandwidth calculations
Z = cbind(voter_data$approve_hi, voter_data$approve_lo, voter_data$disapprove_estimate,
voter_data$disapprove_hi, voter_data$disapprove_lo)
df_voter_data = df_voter_data %>%
mutate(approve_hi = Z[,1], approve_lo = Z[,2], disapprove_estimate = Z[,3], disapprove_hi = Z[,4], disapprove_lo = Z[,5])
cov = cbind(df_voter_data$approve_hi, df_voter_data$approve_lo, df_voter_data$disapprove_estimate,
df_voter_data$disapprove_hi, df_voter_data$disapprove_lo)
y = (df_voter_data$approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
out8 = rdrobust(y, x, c= c, covs = cov, kernel = "triangular", scaleregul = 1,p = 1, bwselect = "mserd")
summary(out8)
## Implement rdplot
y = (df_voter_data$approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
rdplot(y, x, c=c, p=1, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=2, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=3, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdd = rddensity(X = df_voter_data$modeldate, c= cutoff, bwselect = "each", p=1, all = TRUE, kernel = "triangular")
rdplot <- rdplotdensity(rdd, X = df_voter_data$modeldate)
#import data
trump_vote = read.csv("C:/Users/Haokun Zhang/Desktop/github/trade_war_effects/data/approval_topline.csv")
#filter the data to only voters
voter_data = trump_vote %>%
filter(subgroup == "Voters")
voter_data = voter_data %>%
select(subgroup,
modeldate,
approve_estimate,
approve_hi,
approve_lo,
disapprove_estimate,
disapprove_hi,
disapprove_lo)
# create a dataframe of voter_data
df_voter_data <- data.frame(modeldate = c(voter_data$modeldate),
approve_estimate = c(voter_data$approve_estimate))
# change the approve_estimate to log form
df_voter_data$log_approve_estimate=log(df_voter_data$approve_estimate)
# describing modeldate in date class
df_voter_data$modeldate <- as.Date(voter_data$modeldate, format = "%m/%d/%Y")
# plot of distribution across time
p <- ggplot(data = df_voter_data, aes(x=modeldate, y=log_approve_estimate)) + geom_line() + scale_x_date(date_labels = "%Y/%m/%d") + geom_vline(xintercept = as.Date("2018-04-02"), color = "red")
# show p
plot(p)
cutoff = as.numeric(as.Date("2018-04-02"))
out1 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "uniform", p =1, h = 20, c= cutoff)
summary(out1)
#statistically insignificant results
#arbitrary bandwidth
out2 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
out3 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =2, h = 20, c= cutoff)
summary(out3)
#arbitrary bandwidth
bwd1 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(bwd1)
bwd2 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "msetwo" , c= cutoff)
summary(bwd2)
out4 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(out4)
out5 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", scaleregul = 0, p =1, bwselect = "mserd", c= cutoff, all = TRUE)
summary(out5)
out6 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", all=TRUE, c= cutoff)
summary(out6)
out7 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "cerrd", c= cutoff)
summary(out7)
#statistically insignificant results
bdw3 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, all = TRUE, c= cutoff)
summary(bdw3)
# shows all bandwidth calculations
Z = cbind(voter_data$approve_hi, voter_data$approve_lo, voter_data$disapprove_estimate,
voter_data$disapprove_hi, voter_data$disapprove_lo)
df_voter_data = df_voter_data %>%
mutate(approve_hi = Z[,1], approve_lo = Z[,2], disapprove_estimate = Z[,3], disapprove_hi = Z[,4], disapprove_lo = Z[,5])
cov = cbind(df_voter_data$approve_hi, df_voter_data$approve_lo, df_voter_data$disapprove_estimate,
df_voter_data$disapprove_hi, df_voter_data$disapprove_lo)
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
out8 = rdrobust(y, x, c= c, covs = cov, kernel = "triangular", scaleregul = 1,p = 1, bwselect = "mserd")
summary(out8)
## Implement rdplot
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
rdplot(y, x, c=c, p=1, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=2, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=3, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
#import data
trump_vote = read.csv("data/approval_topline.csv")
#import modules
library(dplyr)
library(ggplot2)
library(rdrobust)
library(magrittr)
library(haven)
library(tidyverse)
library(data.table)
library(fixest)
library(glue)
library(data.table)
library(caret)
library(glmnet)
library(gbm)
library(ggmap)
library(rpart)
library(rpart.plot)
library(randomForest)
library(rsample)
library(modelr)
library(fastDummies)
library(scales)
library(here)
library(knitr)
library(kableExtra)
library(stargazer)
library(here)
library(foreach)
library(rddensity)
library(dplyr)
path <- here()
#import data
trump_vote = read.csv("data/approval_topline.csv")
View(df_voter_data)
View(df_voter_data)
Z = cbind(voter_data$approve_hi, voter_data$approve_lo, voter_data$disapprove_estimate,
voter_data$disapprove_hi, voter_data$disapprove_lo)
df_voter_data = df_voter_data %>%
mutate(approve_hi = Z[,1], approve_lo = Z[,2], disapprove_estimate = Z[,3], disapprove_hi = Z[,4], disapprove_lo = Z[,5])
# transform covariates to log form
df_voter_data$log_approve_hi = log(df_voter_data$approve_hi)
df_voter_data$log_approve_lo = log(df_voter_data$approve_lo)
df_voter_data$log_disapprove_estimate = log(df_voter_data$disapprove_estimate)
df_voter_data$log_disapprove_hi = log(df_voter_data$disapprove_hi)
df_voter_data$log_disapprove_lo = log(df_voter_data$disapprove_lo)
cov = cbind(df_voter_data$log_approve_hi, df_voter_data$log_approve_lo, df_voter_data$log_disapprove_estimate,
df_voter_data$log_disapprove_hi, df_voter_data$log_disapprove_lo)
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
out8 = rdrobust(y, x, c= c, covs = cov, kernel = "triangular", scaleregul = 1,p = 1, bwselect = "mserd")
summary(out8)
Z = cbind(voter_data$approve_hi, voter_data$approve_lo, voter_data$disapprove_estimate,
voter_data$disapprove_hi, voter_data$disapprove_lo)
df_voter_data = df_voter_data %>%
mutate(approve_hi = Z[,1], approve_lo = Z[,2], disapprove_estimate = Z[,3], disapprove_hi = Z[,4], disapprove_lo = Z[,5])
# transform covariates to log form
df_voter_data$log_approve_hi = log(df_voter_data$approve_hi)
df_voter_data$log_approve_lo = log(df_voter_data$approve_lo)
df_voter_data$log_disapprove_estimate = log(df_voter_data$disapprove_estimate)
df_voter_data$log_disapprove_hi = log(df_voter_data$disapprove_hi)
df_voter_data$log_disapprove_lo = log(df_voter_data$disapprove_lo)
cov = cbind(df_voter_data$log_approve_hi, df_voter_data$log_approve_lo, df_voter_data$log_disapprove_estimate,
df_voter_data$log_disapprove_hi, df_voter_data$log_disapprove_lo)
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
out8 = rdrobust(y, x, c= c, covs = cov, kernel = "triangular", scaleregul = 1,p = 2, bwselect = "mserd")
summary(out8)
## Implement rdplot
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-04-2"))
rdplot(y, x, c=c, p=1, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=2, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=3, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
cutoff = as.numeric(as.Date("2018-06-015"))
out1 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "uniform", p =1, h = 20, c= cutoff)
summary(out1)
#statistically insignificant results
#arbitrary bandwidth
#import data
trump_vote = read.csv("C:/Users/Haokun Zhang/Desktop/github/trade_war_effects/data/approval_topline.csv")
#filter the data to only voters
voter_data = trump_vote %>%
filter(subgroup == "Voters")
voter_data = voter_data %>%
select(subgroup,
modeldate,
approve_estimate,
approve_hi,
approve_lo,
disapprove_estimate,
disapprove_hi,
disapprove_lo)
# create a dataframe of voter_data
df_voter_data <- data.frame(modeldate = c(voter_data$modeldate),
approve_estimate = c(voter_data$approve_estimate))
# change the approve_estimate to log form
df_voter_data$log_approve_estimate=log(df_voter_data$approve_estimate)
# describing modeldate in date class
df_voter_data$modeldate <- as.Date(voter_data$modeldate, format = "%m/%d/%Y")
# plot of distribution across time
p <- ggplot(data = df_voter_data, aes(x=modeldate, y=log_approve_estimate)) + geom_line() + scale_x_date(date_labels = "%Y/%m/%d") + geom_vline(xintercept = as.Date("2018-06-015"), color = "red")
# show p
plot(p)
out2 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, h = 20, c= cutoff)
summary(out2)
#statistically insignificant results
#arbitrary bandwidth
out3 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =2, h = 20, c= cutoff)
summary(out3)
#arbitrary bandwidth
bwd1 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(bwd1)
bwd2 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "msetwo" , c= cutoff)
summary(bwd2)
out4 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", c= cutoff)
summary(out4)
out5 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", scaleregul = 0, p =1, bwselect = "mserd", c= cutoff, all = TRUE)
summary(out5)
out6 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "mserd", all=TRUE, c= cutoff)
summary(out6)
out7 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "cerrd", c= cutoff)
summary(out7)
#statistically insignificant results
out7 = rdrobust(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, bwselect = "cerrd", c= cutoff)
summary(out7)
#statistically insignificant results
bdw3 = rdbwselect(df_voter_data$log_approve_estimate, df_voter_data$modeldate, kernel = "triangular", p =1, all = TRUE, c= cutoff)
summary(bdw3)
# shows all bandwidth calculations
Z = cbind(voter_data$approve_hi, voter_data$approve_lo, voter_data$disapprove_estimate,
voter_data$disapprove_hi, voter_data$disapprove_lo)
df_voter_data = df_voter_data %>%
mutate(approve_hi = Z[,1], approve_lo = Z[,2], disapprove_estimate = Z[,3], disapprove_hi = Z[,4], disapprove_lo = Z[,5])
# transform covariates to log form
df_voter_data$log_approve_hi = log(df_voter_data$approve_hi)
df_voter_data$log_approve_lo = log(df_voter_data$approve_lo)
df_voter_data$log_disapprove_estimate = log(df_voter_data$disapprove_estimate)
df_voter_data$log_disapprove_hi = log(df_voter_data$disapprove_hi)
df_voter_data$log_disapprove_lo = log(df_voter_data$disapprove_lo)
cov = cbind(df_voter_data$log_approve_hi, df_voter_data$log_approve_lo, df_voter_data$log_disapprove_estimate,
df_voter_data$log_disapprove_hi, df_voter_data$log_disapprove_lo)
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-06-15"))
out8 = rdrobust(y, x, c= c, covs = cov, kernel = "triangular", scaleregul = 1,p = 2, bwselect = "mserd")
summary(out8)
## Implement rdplot
y = (df_voter_data$log_approve_estimate)
x = as.integer(df_voter_data$modeldate)
c= as.integer(as.Date("2018-06-15"))
rdplot(y, x, c=c, p=1, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=2, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdplot(y, x, c=c, p=3, binselect="es",
title="RD Plot: Trump Approval Rate over Time",
y.label="Approval Estimate",
x.label="Date (as integer)")
rdd = rddensity(X = df_voter_data$modeldate, c= cutoff, bwselect = "each", p=1, all = TRUE, kernel = "triangular")
rdplot <- rdplotdensity(rdd, X = df_voter_data$modeldate)
